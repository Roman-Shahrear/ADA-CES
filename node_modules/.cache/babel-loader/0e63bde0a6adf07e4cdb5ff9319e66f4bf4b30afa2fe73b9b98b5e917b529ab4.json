{"ast":null,"code":"var _jsxFileName = \"H:\\\\ReactAllapp\\\\login-register-dashboard\\\\src\\\\components\\\\register.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Register = props => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPass] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const handleSubmit = e => {\n    const {\n      MongoClient\n    } = require(\"create\");\n\n    // Connection URI\n    const uri = \"mongodb+srv://sample-hostname:27017/?maxPoolSize=20&w=majority\";\n\n    // Create a new MongoClient\n    const client = new MongoClient(uri);\n    async function run() {\n      try {\n        // Connect the client to the server (optional starting in v4.7)\n        await client.connect();\n\n        // Establish and verify connection\n        await client.db(\"admin\").command({\n          ping: 1\n        });\n        console.log(\"Connected successfully to server\");\n      } finally {\n        // Ensures that the client will close when you finish/error\n        await client.close();\n      }\n    }\n    run().catch(console.dir);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"login-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Full name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: name,\n        onChange: e => setName(e.target.value),\n        type: \"text\",\n        name: \"name\",\n        id: \"name\",\n        placeholder: \"full name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        type: \"email\",\n        placeholder: \"youremail@gmail.com\",\n        id: \"email\",\n        name: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: password,\n        onChange: e => setPass(e.target.value),\n        type: \"password\",\n        placeholder: \"**********\",\n        id: \"password\",\n        name: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Sign in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"link-btn\",\n      onClick: () => props.onFromSwitch('login'),\n      children: \"Don't have an account? Sign up here.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"CQTRtCMK5vqSI0y1psECxf3tCdM=\");\n_c = Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","Register","props","email","setEmail","password","setPass","name","setName","handleSubmit","e","MongoClient","require","uri","client","run","connect","db","command","ping","console","log","close","catch","dir","target","value","onFromSwitch"],"sources":["H:/ReactAllapp/login-register-dashboard/src/components/register.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nexport const Register = (props) =>{\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPass] = useState(\"\");\r\n    const [name, setName] = useState(\"\");\r\n\r\n    const handleSubmit = (e) => {\r\n        const { MongoClient } = require(\"create\");\r\n\r\n        // Connection URI\r\n        const uri =\r\n        \"mongodb+srv://sample-hostname:27017/?maxPoolSize=20&w=majority\";\r\n\r\n        // Create a new MongoClient\r\n        const client = new MongoClient(uri);\r\n\r\n        async function run() {\r\n        try {\r\n            // Connect the client to the server (optional starting in v4.7)\r\n            await client.connect();\r\n\r\n            // Establish and verify connection\r\n            await client.db(\"admin\").command({ ping: 1 });\r\n            console.log(\"Connected successfully to server\");\r\n        } finally {\r\n            // Ensures that the client will close when you finish/error\r\n            await client.close();\r\n        }\r\n        }\r\n        run().catch(console.dir);\r\n\r\n    }\r\n    return (\r\n    <div className='auth-form-container'>\r\n        <h2>Register</h2>\r\n        <form className='login-form' onSubmit={handleSubmit}>\r\n            <label htmlFor=\"name\">Full name</label>\r\n            <input value={name} onChange={(e) => setName(e.target.value)} type=\"text\" name=\"name\" id=\"name\" placeholder=\"full name\" />\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input value={email} onChange={(e) => setEmail(e.target.value)} type=\"email\" placeholder=\"youremail@gmail.com\" id=\"email\" name=\"email\"/>\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input value={password} onChange={(e) => setPass(e.target.value)} type=\"password\" placeholder=\"**********\" id=\"password\" name=\"password\"/>\r\n            <button>Sign in</button>\r\n        </form>\r\n        <button className='link-btn' onClick={() => props.onFromSwitch('login')}>Don't have an account? Sign up here.</button>\r\n    </div>\r\n    );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC;AAExC,OAAO,MAAMC,QAAQ,GAAIC,KAAK,IAAI;EAAA;EAC9B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACK,QAAQ,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMS,YAAY,GAAIC,CAAC,IAAK;IACxB,MAAM;MAAEC;IAAY,CAAC,GAAGC,OAAO,CAAC,QAAQ,CAAC;;IAEzC;IACA,MAAMC,GAAG,GACT,gEAAgE;;IAEhE;IACA,MAAMC,MAAM,GAAG,IAAIH,WAAW,CAACE,GAAG,CAAC;IAEnC,eAAeE,GAAG,GAAG;MACrB,IAAI;QACA;QACA,MAAMD,MAAM,CAACE,OAAO,EAAE;;QAEtB;QACA,MAAMF,MAAM,CAACG,EAAE,CAAC,OAAO,CAAC,CAACC,OAAO,CAAC;UAAEC,IAAI,EAAE;QAAE,CAAC,CAAC;QAC7CC,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;MACnD,CAAC,SAAS;QACN;QACA,MAAMP,MAAM,CAACQ,KAAK,EAAE;MACxB;IACA;IACAP,GAAG,EAAE,CAACQ,KAAK,CAACH,OAAO,CAACI,GAAG,CAAC;EAE5B,CAAC;EACD,oBACA;IAAK,SAAS,EAAC,qBAAqB;IAAA,wBAChC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAiB,eACjB;MAAM,SAAS,EAAC,YAAY;MAAC,QAAQ,EAAEf,YAAa;MAAA,wBAChD;QAAO,OAAO,EAAC,MAAM;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAkB,eACvC;QAAO,KAAK,EAAEF,IAAK;QAAC,QAAQ,EAAGG,CAAC,IAAKF,OAAO,CAACE,CAAC,CAACe,MAAM,CAACC,KAAK,CAAE;QAAC,IAAI,EAAC,MAAM;QAAC,IAAI,EAAC,MAAM;QAAC,EAAE,EAAC,MAAM;QAAC,WAAW,EAAC;MAAW;QAAA;QAAA;QAAA;MAAA,QAAG,eAC1H;QAAO,OAAO,EAAC,OAAO;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAc,eACpC;QAAO,KAAK,EAAEvB,KAAM;QAAC,QAAQ,EAAGO,CAAC,IAAKN,QAAQ,CAACM,CAAC,CAACe,MAAM,CAACC,KAAK,CAAE;QAAC,IAAI,EAAC,OAAO;QAAC,WAAW,EAAC,qBAAqB;QAAC,EAAE,EAAC,OAAO;QAAC,IAAI,EAAC;MAAO;QAAA;QAAA;QAAA;MAAA,QAAE,eACxI;QAAO,OAAO,EAAC,UAAU;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAiB,eAC1C;QAAO,KAAK,EAAErB,QAAS;QAAC,QAAQ,EAAGK,CAAC,IAAKJ,OAAO,CAACI,CAAC,CAACe,MAAM,CAACC,KAAK,CAAE;QAAC,IAAI,EAAC,UAAU;QAAC,WAAW,EAAC,YAAY;QAAC,EAAE,EAAC,UAAU;QAAC,IAAI,EAAC;MAAU;QAAA;QAAA;QAAA;MAAA,QAAE,eAC1I;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAwB;IAAA;MAAA;MAAA;MAAA;IAAA,QACrB,eACP;MAAQ,SAAS,EAAC,UAAU;MAAC,OAAO,EAAE,MAAMxB,KAAK,CAACyB,YAAY,CAAC,OAAO,CAAE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAA8C;EAAA;IAAA;IAAA;IAAA;EAAA,QACpH;AAEV,CAAC;AAAA,GA9CY1B,QAAQ;AAAA,KAARA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}